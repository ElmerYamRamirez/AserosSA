@page "/consumounidad"

@using AntDesign.Charts
@using Title = AntDesign.Charts.Title
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject IJSRuntime JsRuntime

<div class="col-sm-12" style="text-align:left;margin-top:10px;">
    <h3>Grafica de Consumo por Unidad</h3>
</div>
<Tabs ActiveKeyChanged="OnTabChanged">
    <TabPane Key="1">
        <ChildContent>
            <AntDesign.Charts.Column Data="data1" Config="config1" />
        </ChildContent>
    </TabPane>
</Tabs>
<div class="col-sm-12" style="text-align:center;margin-top:10px;">
    <h5>Articulos</h5>
</div>

<div class="col-sm-12" style="text-align:right; margin-top:10px;">
    <Button Type="primary" @onclick="downloadMessage">Descargar</Button>
</div>

@code{ IChartComponent chart5;

    IChartComponent chart6;



    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private async void OnTabChanged(string activeKey)
    {
    }

    #region  #endregion graficaUnidad

    object[] data1 =
{
        new
        {
            type = "Lamiacion",
            sales = 23
        },
        new
        {
            type = "Materia Prima",
            sales = 65
        },
        new
        {
            type = "Refacciones",
            sales = 30
        },
        new
        {
            type = "Productos de Varios",
            sales = 25
        },
        new
        {
            type = "Aceria",
            sales = 48
        },
        new
        {
            type = "Papeleria",
            sales = 138
        },
        new
        {
            type = "Vaciado",
            sales = 123
        },
        new
        {
            type = "Acondicionado",
            sales = 70
        }
    };

    #endregion  #endregion graficaUnidad

    ColumnConfig config1 = new ColumnConfig
    {
        Title = new Title
        {
            Visible = true,
            Text = "Grafica Consumo de valor"
        },
        ForceFit = true,
        Padding = "auto",
        XField = "type",
        YField = "sales",
        Meta = new
        {
            Type = new
            {
                Alias = "categoria"
            },
            Sales = new
            {
                Alias = "cantidad"
            }
        }
    };

    public async Task downloadMessage()
    {
        await JsRuntime.InvokeAsync<object>(identifier: "swal", "Descargando Reporte...");
    }

}

<!--<Pie Data="userStoriesByCriteria" Config="pieConfig" />

<AntDesign.Charts.Line Data="data" Config="config" />

code{

    object[] data = new object[] {
        new  { year= "1991", value= 3 },
        new  { year= "1992", value= 4 },
        new  { year= "1993", value= 3.5 },
        new  { year= "1994", value= 5 },
        new  { year= "1995", value= 4.9 },
        new  { year= "1996", value= 6 },
        new  { year= "1997", value= 7 },
        new  { year= "1998", value= 9 },
        new  { year= "1999", value= 13 },


    };

    object[] userStoriesByCriteria = new object[]
    {
        new { criterio="finalizadas", value = 56 },
        new { criterio="Intermedio", value = 96 },
        new { criterio="Inicial", value = 76 },

        };

    LineConfig config = new LineConfig()
    {
        Title = new AntDesign.Charts.Title()
        {
            Visible = true,
            Text = "Mi gráfica",
        },
        Description = new Description()
        {
            Visible = true,
            Text = "Mi prueba",
        },
        Padding = "auto",
        ForceFit = true,
        XField = "year",
        YField = "value",
        Smooth = true,
    };

    PieConfig pieConfig = new PieConfig()
    {
        Title = new AntDesign.Charts.Title()
        {
            Visible = true,
            Text = "Historias de usuario por criterio de exito",
        },
        Description = new Description()
        {
            Visible = true,
            Text = "Se muetran los tres ecriterios de exito que se tienen para las historias de usuario",
        },

        Radius = 0.8,
        AngleField = "value",
        ColorField = "criterio",

        Label = new PieLabelConfig
        {
            Visible = true,
            Type = "inner"
        }
    };

    class Column
    {
        public string Proyecto { get; set; }

        public int Historias_de_usuario { get; set; }

        public string Estatus { get; set; }
    }

    Column[] proyectos = Enumerable.Range(0, 20).Select(i => new Column()
    {
        Proyecto = $"Proyecto {i}",
        Historias_de_usuario = 32,
        Estatus = $"Pendiente {i}"
    }).ToArray();
}-->
