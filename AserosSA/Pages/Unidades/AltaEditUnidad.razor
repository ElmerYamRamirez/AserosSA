@page "/unidad"
@page "/unidad/{id:int}"
@using System.Text.Json;
@using Models;
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject ModalService _modalService
@inject MessageService _message

@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (id != 0)
{
    <h3>Editar Almacen</h3>
}
else
{
    <h3>Alta Almacen</h3>
}

<Form Model="@Unidad"
      LabelColSpan="24"
      WrapperColSpan="8"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed"
      Size="ntSizeLDSType.Small">

    <FormItem Label="Nombre">
        <Input @bind-Value="@context.Nombre" />
    </FormItem>
    <FormItem Label="Simbolo">
        <TextArea @bind-Value="@context.Simbolo" />
    </FormItem>
    <FormItem WrapperColSpan="16">
        <Button @onclick="save" HtmlType="submit">
            @saveValue
        </Button>
        <Button @onclick="cancel" HtmlType="submit" Danger>
            Cancelar
        </Button>
    </FormItem>
</Form>
<!--<div class="rounded w-75 bg-light mx-auto" style="margin:15px;">
    <h3 class="text-center">Unidad</h3>
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <table class="table">
                <tbody>
                    <tr>
                        <td colspan="3">
                            <label>Nombre de Unidad: </label>
                            <input type="text" class="form-control" aria-label="">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Simbolo de Unidad: </label>
                            <input type="text" class="form-control" aria-label="">
                        </td>


                    </tr>
                </tbody>
            </table>
        </div>

        <div class="col-sm-11" style="text-align:right;">
            <Button Type="primary" @onclick="savedMessage">@saveValue</Button>
            <Button Type="default" @onclick="cancel" Danger>Cancelar</Button>
        </div>
    </div>
</div>-->

@code {
    [Parameter]
    public int id { get; set; }

    public String saveValue { get; set; }

    private UnidadModel Unidad = new UnidadModel();
    List<UnidadModel> unidades = null;

    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            saveValue = "Editar";
        }
        else
        {
            saveValue = "Guardar";
        }

        unidades = await localStorage.GetItemAsync<List<UnidadModel>>("Unidades");

        if (id != 0)
        {
            Unidad = unidades.Find(x => x.Id == id);
        }

    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(Unidad)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(Unidad)}");
    }

    private async Task save()
    {
        if (Unidad.Id == 0)
        {
            Unidad.Id = unidades[unidades.Count - 1].Id + 1;
            //Unidad.Id = unidades.Count + 1;
            unidades.Add(Unidad);
        }
        await localStorage.SetItemAsync<List<UnidadModel>>("Unidades", unidades);
        await JsRuntime.InvokeAsync<object>("blazorInterop.saveSwal");
        NavigationManager.NavigateTo("listadoUnidades");
    }
    /*public async Task savedMessage()
    {
        if (id != 0)
            await JsRuntime.InvokeAsync<object>(identifier: "swal", "Editar", "Unidad Editada correctamente");
        else
            await JsRuntime.InvokeAsync<object>(identifier: "swal", "Guardar", "Unidad Guardada correctamente");

        NavigationManager.NavigateTo("/listadoUnidades");
    }*/


    public async Task cancel()
    {
        //await JsRuntime.InvokeAsync<string>(identifier: "cancelSwal");
        var isTrue = await _modalService.ConfirmAsync(new ConfirmOptions()
        {
            Title = "Cancelar",
            Icon =@<Icon Type="exclamation-circle" Theme="Outline"></Icon>,
            Content = "Seguro que deseas cancelar",
            OkText = "Si",
            CancelText = "Cancelar"
            });

            if (isTrue)
            NavigationManager.NavigateTo("/listadoUnidades");

         }
    }

