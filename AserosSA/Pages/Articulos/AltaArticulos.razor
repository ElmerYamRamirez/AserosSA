@page "/altaArticulo"
@page "/editararticulo/{id}"
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject ModalService _modalService
@inject MessageService _message
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using Models;
@using System.Text.Json;

<div class="rounded w-75 bg-light mx-auto" style="margin:15px; padding: 15px;">
    <h3 class="text-center">Captura de Articulos</h3>
    <Divider />
    <Form @ref="form"
          ValidateOnChange="true"
          Model="@Articulo"
          LabelColSpan="24"
          WrapperColSpan="24"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed"
          Size="ntSizeLDSType.Small">
        <Row Gutter="16">
            <AntDesign.Col Span="12">
                <FormItem Label="Clave" LabelColSpan="24" WrapperColSpan="24">
                    <Input id="clave" @bind-Value="@context.Id" />
                </FormItem>
            </AntDesign.Col>
            <AntDesign.Col Span="12">
                <FormItem Label="Nombre" LabelColSpan="24" WrapperColSpan="24">
                    <Input id="nombre" @bind-Value="@context.Nombre" />
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="12">
                <FormItem Label="Descripción">
                    <TextArea @bind-Value="@context.Descripcion" />
                </FormItem>
            </AntDesign.Col>
            <AntDesign.Col Span="12">
                <FormItem Label="Marca">
                    <Input id="marca" @bind-Value="@context.Marca" />
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="8">
                <FormItem Label="Cantidad">
                    <AntDesign.InputNumber id="cantidad" @bind-Value="@context.Cantidad" />
                </FormItem>
            </AntDesign.Col>
            <AntDesign.Col Span="8">
                <FormItem Label="Precio unitario">
                    <AntDesign.InputNumber id="precioUnitario" @bind-Value="@context.PrecioUnitario" />
                </FormItem>
            </AntDesign.Col>
            <AntDesign.Col Span="8">
                <FormItem Label="Precio unitario">
                    <AntDesign.InputNumber id="precioUnitario" @bind-Value="@context.PrecioUnitario" />
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="8">
                <FormItem Label="Minimo">
                    <AntDesign.InputNumber id="minimo" @bind-Value="@context.Minimo" />
                </FormItem>
            </AntDesign.Col>
            <AntDesign.Col Span="8">
                <FormItem Label="Maximo">
                    <AntDesign.InputNumber id="maximo" @bind-Value="@context.Maximo" />
                </FormItem>
            </AntDesign.Col>
            <AntDesign.Col Span="8">
                <FormItem Label="Punto de reorden">
                    <AntDesign.InputNumber id="puntoReorden" @bind-Value="@context.PuntoReorden" />
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="24">
                <FormItem Label="Unidad">
                    <Select DataSource="@_unidades"
                            DefaultValue="@context.UnidadId"
                            @bind-Value="@context.UnidadId"
                            ValueName="@nameof(Unidad.Id)"
                            LabelName="@nameof(Unidad.Descripcion)">
                    </Select>
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="24">
                <FormItem Label="Almacen">
                    <Select DataSource="@_almacenes"
                            DefaultValue="@context.AlmacenId"
                            @bind-Value="@context.AlmacenId"
                            ValueName="@nameof(Almacen.Id)"
                            LabelName="@nameof(Almacen.Descripcion)">
                    </Select>
                </FormItem>
            </AntDesign.Col>
        </Row>
        <Row Gutter="16">
            <AntDesign.Col Span="24">
                <FormItem Label="Ubicación ">
                    <Select DataSource="@_ubicaciones"
                            DefaultValue="@context.UbicacionId"
                            @bind-Value="@context.UbicacionId"
                            ValueName="@nameof(Ubicacion.Id)"
                            LabelName="@nameof(Ubicacion.Descripcion)">
                    </Select>
                </FormItem>
            </AntDesign.Col>
        </Row>
        <FormItem WrapperColSpan="16">
            <Button @onclick="Save">
                Guardar
            </Button>
            <Button @onclick="cancel" HtmlType="submit" Danger>
                Cancelar
            </Button>
        </FormItem>
    </Form>
</div>

    @code {
        [Parameter]
        public string id { get; set; }

        public String saveValue { get; set; }

        public bool editar = false;

        public string namevalue { get; set; }

        //Formulario
        AntDesign.Form<ArticuloModel> form;
        //AntDesign.Select<UnidadModel> select;
        private ArticuloModel Articulo = new ArticuloModel();
        private UnidadModel Unidad = new UnidadModel();
        private AlmacenModel Almacen = new AlmacenModel();
        private UbicacionModel Ubicacion = new UbicacionModel();
        List<UnidadModel> _unidades = null;
        List<AlmacenModel> _almacenes = null;
        List<UbicacionModel> _ubicaciones = null;
        List<ArticuloModel> articulos = null;

        protected override async Task OnInitializedAsync()
        {
            _unidades = await localStorage.GetItemAsync<List<UnidadModel>>("Unidades");
            _almacenes = await localStorage.GetItemAsync<List<AlmacenModel>>("Almacenes");
            _ubicaciones = await localStorage.GetItemAsync<List<UbicacionModel>>("Ubicaciones");
            articulos = await localStorage.GetItemAsync<List<ArticuloModel>>("Articulos");

            if (id != null)
            {
                Articulo = articulos.Find(x => x.Id.Equals(id));
                Articulo.AlmacenId = Articulo.Almacen.Id;
                Articulo.UnidadId = Articulo.Unidad.Id;
                Articulo.UbicacionId = Articulo.Ubicacion.Id;
                editar = true;
                saveValue = "Editar";
            }
            else
            {
                saveValue = "Guardar";
            }

        }

        public void OnFinishFailed() { }
        public void OnFinish() { }

        public async Task Save()
        {
            if (form.Validate())
            {
                if (editar == false)
                {
                    if (articulos.Exists(x => x.Id == Articulo.Id))
                    {
                        await JsRuntime.InvokeAsync<object>("blazorInterop.errorFormSwal", $"El id {Articulo.Id} ya existe");
                    }
                    else
                    {
                        Almacen = _almacenes.Find(x => x.Id == Articulo.AlmacenId);
                        Unidad = _unidades.Find(x => x.Id == Articulo.UnidadId);
                        Ubicacion = _ubicaciones.Find(x => x.Id == Articulo.UbicacionId);
                        Articulo.Almacen = Almacen;
                        Articulo.Unidad = Unidad;
                        Articulo.Ubicacion = Ubicacion;
                        articulos.Add(Articulo);
                        await localStorage.SetItemAsync<List<ArticuloModel>>("Articulos", articulos);
                        await JsRuntime.InvokeAsync<object>("blazorInterop.saveSwal");
                        NavigationManager.NavigateTo("listaArticulos");
                    }
                }
                else
                {
                    Articulo.Almacen = _almacenes.Find(x => x.Id == Articulo.AlmacenId);
                    Articulo.Unidad = _unidades.Find(x => x.Id == Articulo.UnidadId);
                    Articulo.Ubicacion = _ubicaciones.Find(x => x.Id == Articulo.UbicacionId);
                    await localStorage.SetItemAsync<List<ArticuloModel>>("Articulos", articulos);
                    await JsRuntime.InvokeAsync<object>("blazorInterop.saveSwal");
                    NavigationManager.NavigateTo("listaArticulos");
                }
            }
            else
            {
                await JsRuntime.InvokeAsync<object>("blazorInterop.errorFormSwal");
            }
            Console.WriteLine(JsonSerializer.Serialize(Articulo));
        }


        public async Task cancel()
        {
            //await JsRuntime.InvokeAsync<string>(identifier: "cancelSwal");
            var isTrue = await _modalService.ConfirmAsync(new ConfirmOptions()
            {
                Title = "Cancelar",
                Icon =@<Icon Type="exclamation-circle" Theme="Outline"></Icon>,
                Content = "Seguro que deseas cancelar",
                OkText = "Si",
                CancelText = "Cancelar"
            });

            if (isTrue)
                NavigationManager.NavigateTo("/listaArticulos");

        }
    }

