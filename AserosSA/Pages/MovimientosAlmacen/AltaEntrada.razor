@page "/altaMovimiento"
@page "/altaMovimiento/{id:int}"
@using System.Text.Json;
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

@if (id != 0)
{
    <h3>Editar Entrada</h3>
}
else
{
    <h3>Nueva Entrada Almacen</h3>
}


<Form Model="@model"
      LabelColSpan="24"
      WrapperColSpan="8"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed"
      Size="@model.Size">

    <FormItem Label="Clave de referencia">
        <Input @bind-Value="@context.Input" />
    </FormItem>
    <FormItem Label="Fecha">
        <DatePicker @bind-Value="@context.DatePicker" />
    </FormItem>

    <FormItem Label="articulo">
        <Input @bind-Value="@context.Articulo" />
    </FormItem>
    <FormItem Label="Cantidad">
        <AntDesign.InputNumber @bind-Value="@context.Number" />
    </FormItem>
    <FormItem WrapperColSpan="16">
        <Button @onclick="save" HtmlType="submit">
            Guardar
        </Button>
        <Button @onclick="cancel" HtmlType="submit" Danger>
            Cancelar
        </Button>
    </FormItem>
</Form>


@code {

    [Parameter]
    public int id { get; set; }

    public class Model
    {
        public string Size { get; set; } = AntSizeLDSType.Small;
        public string Input { get; set; } = "9281";
        public string Articulo { get; set; } = "Papel";
        public string InputArea { get; set; } = "inputArea";
        public string Cascader { get; set; } = "11";
        public DateTime? DatePicker { get; set; } = DateTime.Now;
        public DateTime?[] RangePicker { get; set; } = new DateTime?[] { DateTime.Now, DateTime.Now.AddDays(10) };
        public double Number { get; set; } = 1;
        public bool Switch { get; set; } = true;
        public string Radio { get; set; } = "Beijing";
        public string AutoComplete { get; set; }
        public string Name { get; set; }
        public IEnumerable<string> Names { get; set; } = Array.Empty<string>();
    }

    private Model model = new Model();

    private List<CascaderNode> districts = new List<CascaderNode>
{
        new CascaderNode()
        {
            Value = "1",
            Label = "Zhejianng",
            Children = new []
{
                new CascaderNode {Value = "11", Label = "Hangzhou"},
                new CascaderNode {Value = "12", Label = "Wenzhou"},
            }
        },
        new CascaderNode()
        {
            Value = "2",
            Label = "Shanghai",
        }
    };

    private List<string> autoCompleteOptions = new List<string> { "Primary", "Junior", "Senior", "Undergraduate", "Master", "Doctor" };

    record Person(string Name);
    private List<Person> _persons = new List<Person>{
            new Person("John"),
            new Person("Lucy"),
            new Person("Jack"),
            new Person("Emily"),
        };

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(model)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }

    private async Task save()
    {
        //if (id != 0)
        //await JsRuntime.InvokeAsync<object>(identifier: "editSwal");
        //else
        await JsRuntime.InvokeAsync<object>("blazorInterop.saveSwal");
        NavigationManager.NavigateTo("entradaalmacen");
    }

    private async Task cancel()
    {
        await JsRuntime.InvokeAsync<object>("blazorInterop.CancelSwal");
        NavigationManager.NavigateTo("entradaalmacen");
    }
}
