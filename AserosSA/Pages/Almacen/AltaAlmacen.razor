@page "/altaalmacen"
@page "/altaAlmacen/{id:int}"
@using System.Text.Json;
@using Models;
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

@if (id != 0){
    <h3>Editar de Almacen</h3>
}
else { 
    <h3>Alta Almacen</h3>
}

<Form Model="@AlmacenModel"
      LabelColSpan="24"
      WrapperColSpan="8"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed"
      Size="ntSizeLDSType.Small">

    <FormItem Label="Nombre">
        <Input @bind-Value="@context.Nombre" />
    </FormItem>
    <FormItem Label="Descripción">
        <TextArea @bind-Value="@context.Descripcion" />
    </FormItem>
    <FormItem WrapperColSpan="16">
        <Button @onclick="save" HtmlType="submit">
            Guardar
        </Button>
        <Button @onclick="cancel" HtmlType="submit" Danger>
            Cancelar
        </Button>
    </FormItem>
</Form>

@code
{
    [Parameter]
    public int id { get; set; }

    private AlmacenModel AlmacenModel = new AlmacenModel();
    
    protected override void OnInitialized()
    {
    }

    record Person(string Name);
    private List<Person> _persons = new List<Person>
    {
            new Person("John"),
            new Person("Lucy"),
            new Person("Jack"),
            new Person("Emily"),
    };

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(AlmacenModel)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(AlmacenModel)}");
    }

    private async Task save()
    {
        await JsRuntime.InvokeAsync<object>("blazorInterop.saveSwal");
        NavigationManager.NavigateTo("almacen");
    }

    private async Task cancel()
    {
        await JsRuntime.InvokeAsync<object>("blazorInterop.CancelSwal");
        NavigationManager.NavigateTo("almacen");
    }

}
